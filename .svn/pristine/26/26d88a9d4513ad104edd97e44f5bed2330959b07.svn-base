var soap = require('soap');
var settings = require('../../settings');


//查询用户所有订单
exports.findAllOrder = function(req,res){
	// var data = req.query;
	var data = req.body;
	try{
		var userId = data.user;
		if(!userId || userId == ''){
			return res.json({resultCode:1,info:'用户不能为空'});
		}
		var url = settings.url;
		soap.createClient(url,function(err,client){
			if(err){
				console.log(err);
				return res.json({resultCode:2,info:'连接远程服务器出错'});
			}
			var args = {};
	        args.entityname = 'new_jifei_order';
	        args.filter = '[{"Logical":"or","Conditions":[{"Key":"new_jifei_customerid","Operator":"=","Value":"'+userId+'"}]}]';
	        args.fields = 'new_jifei_customerid,new_jifei_packageid,new_jifei_packageidname,new_jifei_ordersum,new_pack_begintime,new_pack_pirce,new_jifei_endtime,new_strategy_cdate,statecode,createdon';
          	args.orderby = 'new_jifei_endtime desc';
	        args.pagesize = 10000;
	        args.pageindex = 1;
	        client.Query(args,function(err,result){
	        	if(err){
	        		console.log(err);
	        		return res.json({resultCode:2,info:'查询失败,请稍后重试'});
	        	}
	        	var off = null;
	        	for(var a in result.QueryResult){
	        		if(a){
	        			off = true;
	        		}
	        	}
	        	if(off){
	        		var resultData = JSON.parse(result.QueryResult);

	        		//计算用户剩余上网时长
	        		var order = resultData[resultData.length-1];
	        		var endTime = order.new_jifei_endtime;
	        		var time = new Date(endTime);
	        		var startTime = new Date();
	        		var allTime = time.getTime()-startTime.getTime();
	        		if(allTime < 0){
	        			allTime = 0;
	        		}


	        		if(resultData.issuccess != undefined || resultData.issuccess == false){
						return res.json({resultCode:1,info:"查询用户订单失败，请稍后重试"});
	        		}  
	        		res.json({resultCode:0,time:Math.floor(allTime/1000),orderlenght:resultData.length,data:resultData});
	        	}else{
	        		res.json({resultCode:1,info:'该用户订单不存在'});
	        	}
	        });
		});
	}catch(e){
		console.log('>>>>>>>>>>>>>发生了异常<<<<<<<<<<<<');
		console.log(e);
		res.json({resultCode:2,info:'服务器忙，请重试'});
	}
}


//查询工厂的wifi套餐
exports.findFacPack = function(req,res){
	var data = req.body;
	try{
		var factoryId = data.factory;
		if(!factoryId || factoryId == ''){
			return res.json({resultCode:1,info:'用户工厂不能为空'});
		}
		var url = settings.url;
		soap.createClient(url,function(err,client){
			if(err){
				console.log(err);
				return res.json({resultCode:2,info:'连接远程服务器出错'});
			}
			var args = {};
	        args.entityname = 'new_jifei_factorypackage';
	        args.filter = '[{"Logical":"or","Conditions":[{"Key":"new_jifei_factoryid","Operator":"=","Value":"'+factoryId+'"},{"Key":"statecode","Operator":"=","Value":"0"}]}]';
	        args.fields = 'new_jifei_factorypackageid,new_jifei_packageid,new_name,statecode,statuscode,createdon';
          	args.orderby = 'createdon desc';
	        args.pagesize = 10000;
	        args.pageindex = 1;
	        soap.Query(args,function(err,result){
	        	if(err){
	        		console.log(err);
	        		return res.json({resultCode:2,info:'查询工厂套餐失败,请稍后重试'});
	        	}
		        var off = null;
	        	for(var a in result.QueryResult){
	        		if(a){
	        			off = true;
	        		}
	        	}
	        	if(off){
	        		var resultData = JSON.parse(result.QueryResult);
	        		if(resultData.issuccess != undefined || resultData.issuccess == false){
						return res.json({resultCode:1,info:"查询工厂套餐失败,请稍后重试"});
	        		}  
	        		res.json({resultCode:0,data:resultData});
	        	}else{
	        		res.json({resultCode:1,info:'该工厂没有套餐'});
	        	}
	        });
		});
	}catch(e){
		console.log('>>>>>>>>>>>>>发生了异常<<<<<<<<<<<<');
		console.log(e);
		res.json({resultCode:2,info:'服务器忙，请稍后重试'});
	}

}

//根据套餐id查询套餐信息
exports.findPackage = function(req,res){
	var data = req.body;
	try{
		var packageId = data.packageId;
		if(!packageId || packageId == ''){
			return res.json({resultCode:1,info:'套餐id不能为空'});
		}
		var url = settings.url;
		soap.createClient(url,function(err,client){
			if(err){
				console.log(err);
				return res.json({resultCode:2,info:'连接远程服务器出错'});
			}
			var args = {};
	        args.entityname = 'new_jifei_package';
	        args.filter = '[{"Logical":"or","Conditions":[{"Key":"new_jifei_packageid","Operator":"=","Value":"'+packageId+'"}]}]';
	        args.fields = 'new_jifei_strategyid,new_pack_content,new_pack_name,new_pack_pirce,new_strategy_cdate,createdon';
          	args.orderby = 'createdon desc';
	        args.pagesize = 1;
	        args.pageindex = 1;
	        soap.Query(args,function(err,result){
	        	if(err){
	        		console.log(err);
	        		return res.json({resultCode:2,info:'套餐查询失败,请稍后重试'});
	        	}
		        var off = null;
	        	for(var a in result.QueryResult){
	        		if(a){
	        			off = true;
	        		}
	        	}
	        	if(off){
	        		var resultData = JSON.parse(result.QueryResult);
	        		if(resultData.issuccess != undefined || resultData.issuccess == false){
						return res.json({resultCode:1,info:"参数错误"});
	        		}  
	        		res.json({resultCode:0,data:resultData});
	        	}else{
	        		res.json({resultCode:1,info:'该套餐不存在'});
	        	}
	        });
		});
	}catch(e){
		console.log('>>>>>>>>>>>>>发生了异常<<<<<<<<<<<<');
		console.log(e);
		res.json({resultCode:2,info:'服务器繁忙，请稍后重试'});
	}
}


//卡密充值
exports.cardRech = function(req,res){
	// var data = req.body;
	var data = req.query;
	try{
		var cardkey = data.card;
		var cardpwd = data.pwd;
		var user = data.user;
		if(!cardkey || cardkey == '' || !cardpwd || cardpwd == '' || !user || user == ''){
			return res.json({resultCode:1,info:'参数不能为空'});
		}
		var url = settings.url;
		soap.createClient(url,function(err,client){
			if(err){
				console.log(err);
				return res.json({resultCode:2,info:'连接远程服务器出错'});
			}
			var qryArgs = {};
	        qryArgs.entityname = 'new_jifei_cardname';
	        qryArgs.filter = '[{"Logical":"or","Conditions":[{"Key":"new_jifei_cardno","Operator":"=","Value":"'+packageId+'"}]}]';
	        qryArgs.fields = 'new_jifei_cardnameid,new_jifei_cardno,new_jifei_flag,new_jifei_cardkey,createdon';
          	qryArgs.orderby = 'createdon desc';
	        qryArgs.pagesize = 1;
	        qryArgs.pageindex = 1;
	        console.log('***********查询卡密***********');
	        client.Query(qryArgs,function(err,result){
	        	if(err){
	        		console.log(err);
	        		return res.json({resultCode:2,info:'卡密查询失败,请稍后重试'});
	        	}
	        	var off = null;
	        	for(var a in result.QueryResult){
	        		if(a){
	        			off = true;
	        			break;
	        		}
	        	}
	        	if(off){
	        		var resuData = JSON.parse(result.QueryResult)[0];
	        		if(cardpwd != resuData.new_jifei_cardkey){
	        			return res.json({resultCode:1,info:'对不起,您输入的卡号不存在'});
	        		}
	        		if(resuData.new_jifei_flag == '1'){
	        			return res.json({resultCode:1,info:'对不起,该卡号已经充值'});
	        		}
	        		var userArgs = {};
	        		userArgs.entityname = "new_jifei_customer";
	        		userArgs.filter = '[{"Logical":"or","Conditions":[{"Key":"new_useraccount","Operator":"=","Value":"'+user+'"}]}]';
			        userArgs.fields = 'new_jifei_customerid,createdon';
		          	userArgs.orderby = 'createdon desc';
			        userArgs.pagesize = 1;
			        userArgs.pageindex = 1;
			        console.log('**********查询用户********');
			        client.Query(userArgs,function(err,result){
			        	if(err){
			        		console.log(err);
			        		console.log('*********查询用户失败**********');
			        		return res.json({resultCode:2,info:'用户查询失败,请稍后重试'});
			        	}
			        	var off = null;
			        	for(var a in result.QueryResult){
			        		if(a){
			        			off = true;
			        			break;
			        		}
			        	}
			        	if(off){
			        		var userData = JSON.parse(result.QueryResult);
			        		
			        	}else{
			        		console.log('***************用户不存在****************');
	        				return res.json({resultCode:1,info:'对不起,您充值的帐号不存在'});	
			        	}
			        });
	        	}else{
	        		console.log('***************卡号不存在****************');
	        		return res.json({resultCode:1,info:'对不起,您输入的卡号不存在'});
	        	}
	        });
		});
	}catch(e){
		console.log('>>>>>>>>>>>>>>>>发生了异常<<<<<<<<<<<<<<<<<');
		console.log(e);
		res.json({resultCode:2,info:'服务器繁忙，请稍后重试'});
	}
}

exports.updAccountFacId = function(req,res){
	var data = req.body;
	// var data = req.query;
	try{
		var accountId = data.userId;
		var facId = data.factoryId;
		if(!accountId || accountId == '' || !facId || facId == ''){
			return res.json({resultCode:1,info:'参数不能为空'});
		}
		var url = settings.url;
		soap.createClient(url,function(err,client){
			if(err){
				console.log(err);
				return res.json({resultCode:2,info:'连接远程服务器出错'});
			}
			var args = {};
			args.entityname ='new_jifei_customer';
            args.data = '[{"Key":"new_jifei_customerid","Value":"'+accountId+'"},{"Key":"new_jifei_factoryid","Value":"'+facId+'"}]';
            console.log(args);
            client.Update(args,function(err,result){
            	if(err){
            		console.log(err);
            		console.log('****************更新发生异常**************');
            		return res.json({resultCode:2,info:'服务器繁忙，请稍后重试'});
            	}
            	var off = null;
            	console.log(result);
            	for(var a in  result.UpdateResult){
            		if(a){
            			off = true;
            			break;
            		}
            	}

            	if(off){
            		var resuData = JSON.parse(result.UpdateResult);
            		if(resuData.issuccess){
            			return res.json({resultCode:0,info:'用户工厂更新成功'});
            		}else{
            			return res.json({resultCode:1,info:'用户工厂更新失败'});
            		}
            	}else{
            		return res.json({resultCode:1,info:'用户工厂更新失败'});
            	}
            });
		});
	}catch(e){
		console.log('>>>>>>>>>>>>>>>>发生了异常<<<<<<<<<<<<<<<<<');
		console.log(e);
		res.json({resultCode:2,info:'服务器繁忙，请稍后重试'});
	}
}
// exports.findOrderTime = function(req,res){
// 	var data = req.body;
// 	try{
// 		var userId = data.user;
// 		if(!userId || userId == ''){
// 			return res.json({resultCode:1,info:'用户不能为空'});
// 		}
// 		var url = settings.url;
// 		soap.createClient(url,function(err,client){
// 			if(err){
// 				console.log(err);
// 				return res.json({resultCode:2,info:'连接远程服务器出错'});
// 			}
// 			var args = {};
// 			args.entityname = 'new_jifei_factorypackage';
// 	        args.filter = '[{"Logical":"or","Conditions":[{"Key":"new_jifei_packageid","Operator":"=","Value":"'+packageId+'"}]}]';
// 	        args.fields = 'new_jifei_strategyid,new_pack_content,new_pack_name,new_pack_pirce,new_strategy_cdate,createdon';
//           	args.orderby = 'createdon desc';
// 	        args.pagesize = 10000;
// 	        args.pageindex = 1;

// 		});
// 	}catch(e){
// 		console.log('>>>>>>>>>>>>>>>>>>>>>>查询用户剩余时长发生了异常<<<<<<<<<<<<<<<<<<<<<<<<<<<');
// 		console.log(e);
// 		res.json({resultCode:2,info:'服务器繁忙，请稍后重试'});
// 	}
// }